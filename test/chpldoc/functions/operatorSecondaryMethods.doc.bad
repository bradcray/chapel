.. default-domain:: chpl

.. module:: operatorSecondaryMethods.doc

operatorSecondaryMethods.doc
============================
**Usage**

.. code-block:: chapel

   use operatorSecondaryMethods.doc;


or

.. code-block:: chapel

   import operatorSecondaryMethods.doc;

.. class:: Foo

   .. attribute:: var x: int

.. class:: Foo2

   .. attribute:: var x: bool

.. method:: proc type Foo.+(a: Foo, b: Foo)

.. method:: proc type Foo.chpl_align(r: range(?i), count: Foo)

.. method:: proc type Foo2.&(lhs: Foo2, rhs: Foo2)

.. method:: proc type Foo2.&=(ref lhs: Foo2, rhs: Foo2)

.. method:: proc type Foo.chpl_by(r: range(?i), count: Foo)

.. method:: proc type Foo.:(rhs: Foo, type t: Bar)

.. method:: proc type Foo.#(r: range(?i), count: Foo)

.. method:: proc type Foo./=(ref lhs: Foo, rhs: Foo)

.. method:: proc type Foo./(lhs: Foo, rhs: Foo)

.. method:: proc type Foo.==(lhs: Foo, rhs: Foo)

.. method:: proc type Foo.**=(ref lhs: Foo, rhs: Foo)

.. method:: proc type Foo.**(lhs: Foo, rhs: Foo)

.. method:: proc type Foo.>(lhs: Foo, rhs: Foo)

.. method:: proc type Foo.>=(lhs: Foo, rhs: Foo)

.. method:: proc type Foo.!=(lhs: Foo, rhs: Foo)

.. method:: proc type Foo.<~>(const ref ch: channel, const x: Foo) const ref throws

.. method:: proc type Foo.<(lhs: Foo, rhs: Foo)

.. method:: proc type Foo.<=(lhs: Foo, rhs: Foo)

.. method:: proc type Foo.-=(ref lhs: Foo, rhs: Foo)

.. method:: proc type Foo.%(lhs: Foo, rhs: Foo)

.. method:: proc type Foo.%=(ref lhs: Foo, rhs: Foo)

.. method:: proc type Foo.*(lhs: Foo, rhs: Foo)

.. method:: proc type Foo.-(arg: Foo)

.. method:: proc type Foo2.!(arg: Foo2)

.. method:: proc type Foo2.|(lhs: Foo2, rhs: Foo2)

.. method:: proc type Foo2.|=(ref lhs: Foo2, rhs: Foo2)

.. method:: proc type Foo.+=(ref lhs: Foo, rhs: Foo)

.. method:: proc type Foo.+(arg: Foo)

.. method:: proc type Foo.<<(lhs: Foo, rhs: Foo)

.. method:: proc type Foo.<<=(ref lhs: Foo, rhs: Foo)

.. method:: proc type Foo.>>(lhs: Foo, rhs: Foo)

.. method:: proc type Foo.>>=(ref lhs: Foo, rhs: Foo)

.. method:: proc type Foo.-(lhs: Foo, rhs: Foo)

.. method:: proc type Foo.<=>(ref lhs: owned nilable Foo, ref rhs: owned nilable Foo)

.. method:: proc type Foo.*=(ref lhs: Foo, rhs: Foo)

.. method:: proc type Foo.~(arg: Foo)

.. method:: proc type Foo2.^(lhs: Foo2, rhs: Foo2)

.. method:: proc type Foo2.^=(ref lhs: Foo2, rhs: Foo2)

.. record:: Bar

   .. attribute:: var y: int

.. method:: proc Bar.init=(other: Bar)

.. method:: proc type Bar.=(ref lhs: Bar, rhs: Bar)

