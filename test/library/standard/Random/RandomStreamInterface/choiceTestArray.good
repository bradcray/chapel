$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: randomStream(real(64)), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: randomStream(int(64)), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (randomStream(int(64))).choice(x: [domain(1,int(64),one)] R, size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(64)) from function 'test'
  choiceTestArray.chpl:19: called as test(stream: randomStream(int(64)), X: [domain(1,int(64),one)] R, size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(64), trials: int(64))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: randomStream(real(64)), X: domain(1,int(64),positive), size: int(64), replace: bool, prob: [domain(1,int(64),positive)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: randomStream(int(64)), X: domain(1,int(64),positive), size: int(64), replace: bool, prob: [domain(1,int(64),positive)] real(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (randomStream(int(64))).choice(x: [domain(1,int(64),positive)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),positive)] real(64)) from function 'test'
  choiceTestArray.chpl:32: called as test(stream: randomStream(int(64)), X: [domain(1,int(64),positive)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),positive)] real(64), trials: int(64))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: randomStream(real(64)), X: domain(1,int(64),one), size: nothing, replace: bool, prob: [domain(1,int(64),one)] int(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: randomStream(int(64)), X: domain(1,int(64),one), size: nothing, replace: bool, prob: [domain(1,int(64),one)] int(64)) from method 'choice'
  choiceTestUtils.chpl:29: called as (randomStream(int(64))).choice(x: [domain(1,int(64),one)] int(64), size: nothing, replace: bool, prob: [domain(1,int(64),one)] int(64)) from function 'test'
  choiceTestArray.chpl:35: called as test(stream: randomStream(int(64)), X: [domain(1,int(64),one)] int(64), size: nothing, replace: bool, prob: [domain(1,int(64),one)] int(64), trials: int(64))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: randomStream(real(64)), X: domain(1,int(64),one), size: nothing, replace: bool, prob: [domain(1,int(64),one)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: randomStream(int(64)), X: domain(1,int(64),one), size: nothing, replace: bool, prob: [domain(1,int(64),one)] real(64)) from method 'choice'
  choiceTestUtils.chpl:29: called as (randomStream(int(64))).choice(x: [domain(1,int(64),one)] int(64), size: nothing, replace: bool, prob: [domain(1,int(64),one)] real(64)) from function 'test'
  choiceTestArray.chpl:36: called as test(stream: randomStream(int(64)), X: [domain(1,int(64),one)] int(64), size: nothing, replace: bool, prob: [domain(1,int(64),one)] real(64), trials: int(64))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: randomStream(real(64)), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] real(32)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: randomStream(int(64)), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] real(32)) from method 'choice'
  choiceTestUtils.chpl:34: called as (randomStream(int(64))).choice(x: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] real(32)) from function 'test'
  choiceTestArray.chpl:41: called as test(stream: randomStream(int(64)), X: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] real(32), trials: int(64))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: randomStream(real(64)), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(32)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: randomStream(int(64)), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(32)) from method 'choice'
  choiceTestUtils.chpl:34: called as (randomStream(int(64))).choice(x: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(32)) from function 'test'
  choiceTestArray.chpl:45: called as test(stream: randomStream(int(64)), X: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(32), trials: int(64))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: randomStream(real(64)), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(32)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: randomStream(int(64)), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(32)) from method 'choice'
  choiceTestUtils.chpl:34: called as (randomStream(int(64))).choice(x: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(32)) from function 'test'
  choiceTestArray.chpl:47: called as test(stream: randomStream(int(64)), X: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(32), trials: int(64))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: randomStream(real(64)), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(16)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: randomStream(int(64)), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(16)) from method 'choice'
  choiceTestUtils.chpl:34: called as (randomStream(int(64))).choice(x: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(16)) from function 'test'
  choiceTestArray.chpl:49: called as test(stream: randomStream(int(64)), X: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(16), trials: int(64))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: randomStream(real(64)), X: domain(1,int(64),one), size: domain(1,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: randomStream(int(64)), X: domain(1,int(64),one), size: domain(1,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (randomStream(int(64))).choice(x: [domain(1,int(64),one)] int(64), size: domain(1,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function 'test'
  choiceTestArray.chpl:57: called as test(stream: randomStream(int(64)), X: [domain(1,int(64),one)] int(64), size: domain(1,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64), trials: int(64))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: randomStream(real(64)), X: domain(1,int(64),one), size: domain(2,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: randomStream(int(64)), X: domain(1,int(64),one), size: domain(2,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (randomStream(int(64))).choice(x: [domain(1,int(64),one)] int(64), size: domain(2,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function 'test'
  choiceTestArray.chpl:58: called as test(stream: randomStream(int(64)), X: [domain(1,int(64),one)] int(64), size: domain(2,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64), trials: int(64))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: randomStream(real(64)), X: domain(1,int(64),one), size: domain(3,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: randomStream(int(64)), X: domain(1,int(64),one), size: domain(3,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (randomStream(int(64))).choice(x: [domain(1,int(64),one)] int(64), size: domain(3,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function 'test'
  choiceTestArray.chpl:59: called as test(stream: randomStream(int(64)), X: [domain(1,int(64),one)] int(64), size: domain(3,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64), trials: int(64))
